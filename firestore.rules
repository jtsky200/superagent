rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Customers - authenticated users can read/write
    match /customers/{customerId} {
      allow read, write: if request.auth != null;
    }
    
    // Companies - authenticated users can read/write
    match /companies/{companyId} {
      allow read, write: if request.auth != null;
    }
    
    // Vehicle configurations - authenticated users can read/write
    match /vehicle_configurations/{configId} {
      allow read, write: if request.auth != null;
    }
    
    // TCO calculations - authenticated users can read/write
    match /tco_calculations/{calculationId} {
      allow read, write: if request.auth != null;
    }
    
    // Customer analyses - authenticated users can read/write
    match /customer_analyses/{analysisId} {
      allow read, write: if request.auth != null;
    }
    
    // Vehicles - public read, authenticated write
    match /vehicles/{vehicleId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Vehicle options - public read, authenticated write
    match /vehicle_options/{optionId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Cantons - public read only
    match /cantons/{cantonId} {
      allow read: if true;
      allow write: if false;
    }
    
    // External data cache - authenticated users can read/write
    match /external_data_cache/{cacheId} {
      allow read, write: if request.auth != null;
    }
    
    // Notifications - users can read/write their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Audit logs - authenticated users can read, admin only write
    match /audit_logs/{logId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
} 